const t=t=>t*Math.PI/180,a=(a,n)=>{const s=t(a[0]),o=a[1],e=n[0],h=n[1],i=t(e-s),M=t(h-o),c=t(s),l=t(e),r=Math.pow(Math.sin(i/2),2)+Math.pow(Math.sin(M/2),2)*Math.cos(c)*Math.cos(l);return 6371*(2*Math.atan2(Math.sqrt(r),Math.sqrt(1-r)))};var n=(t,n=0,s=0,o=0)=>"number"==typeof t?a([t,n],[s,o]):t.reduce(((t,n)=>({lastPoint:n,distance:(null===t.lastPoint?0:a(t.lastPoint,n))+t.distance})),{lastPoint:null,distance:0}).distance;export{n as default,a as getDistance,t as toRad};
